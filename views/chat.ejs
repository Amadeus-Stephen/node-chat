<% include ./partials/navbar %>
<style>
:root {
	--dark-color-a: #667aff;
	--light-color: #e6e9ff;
}
* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
body {
	font-family: 'Roboto', sans-serif;
	font-size: 16px;
	background: var(--light-color);
	margin: 20px;
}
ul {
	list-style: none;
}
a {
	text-decoration: none;
}
.chat-container {
	max-width: 1100px;
	margin: 30px auto;
	overflow: hidden;
}
.chat-header {
	background: var(--dark-color-a);
	color: #fff;
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;
	padding: 15px;
	display: flex;
	align-items: center;
	justify-content: space-between;
}
.chat-main {
	display: grid;
	grid-template-columns: 1fr 3fr;
}
.chat-sidebar {
	color: #fff;
	padding: 20px 20px 60px;
	overflow-y: scroll;
}
.chat-sidebar h2 {
	font-size: 20px;
	background: rgba(0, 0, 0, 0.1);
	padding: 10px;
	margin-bottom: 20px;
}
.chat-sidebar h3 {
	margin-bottom: 15px;
}
.chat-sidebar ul li {
	padding: 10px 0;
}
.chat-messages .message {
	padding: 10px;
	margin-bottom: 15px;
	border-radius: 5px;
	overflow-wrap: break-word;
}
.chat-form-container form {
	display: flex;
}
.chat-form-container input[type='text'] {
	font-size: 16px;
	padding: 5px;
	height: 40px;
	flex: 1;
}
@media (max-width: 700px) {
	.chat-main {
		display: block;
	}
	.chat-sidebar {
		display: none;
	}
}
</style>
<div class="chat-container">
      <header class="card-header">
          <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
                 <h1><i class="fas fa-bolt"></i></h1>
            </li>
        </ul>
      </header>
      <main class="chat-main">
        <div class="chat-sidebar bg-primary">
          <h3><i class="fas fa-comments"></i> Room <%= chatroom.name %></h3>
          <h3><i class="fas fa-users"></i> Users</h3>
          <ul id="users"></ul>
        </div>
        <div class="chat-messages p-3" style="overflow-y: scroll; max-height: 550px;"></div>
      </main>
      <div class="chat-form-container  bg-primary p-5">
        <form id="chat-form">
          <input
            id="msg"
            type="text"
            placeholder="Enter Message"
            required
            autocomplete="off"
          
          />
          <button class="btn btn-success"><i class="fas fa-paper-plane"></i> Send</button>
        </form>
      </div>
    </div>
<script src="/socket.io/socket.io.js"></script>
<script>
const chatForm = document.getElementById('chat-form');
const chatMessages = document.querySelector('.chat-messages');
const name = "<%= user.name %>"
const room = "<%= chatroom._id %>"
const socket = io();
socket.emit('joinRoom', { name, room });
socket.on('chatdata', ({  chatdata,users }) => {
  outputUsers(users);
  chatdata.map(message => {
    outputMessage(message)
  })
});
socket.on('message', message => {
  outputMessage(message);
  chatMessages.scrollTop = chatMessages.scrollHeight;
});
chatForm.addEventListener('submit', e => {
  e.preventDefault();
  let msg = e.target.elements.msg.value;
  msg = msg.trim();
  if (!msg){
    return false;
  }
  socket.emit('chatMessage', msg);
  e.target.elements.msg.value = '';
  e.target.elements.msg.focus();
});
function outputMessage(message) {
  const div = document.createElement('div');
  div.classList.add('message');
  const p = document.createElement('p');
  p.classList.add('meta');
  p.innerText = message.name;
  p.innerHTML += `<span>${message.time}</span>`;
  div.appendChild(p);
  const para = document.createElement('p');
  para.classList.add('text');
  para.innerText = message.text;
  div.appendChild(para);
  document.querySelector('.chat-messages').appendChild(div);
}
function outputUsers(users) {
  userList.innerHTML = '';
  users.forEach(user=>{
    const li = document.createElement('li');
    li.innerText = user.name;
    userList.appendChild(li);
  });
 }
</script>